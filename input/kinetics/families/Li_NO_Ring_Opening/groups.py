#!/usr/bin/env python
# encoding: utf-8

name = "Li_NO_Ring_Opening/groups"
shortDesc = ""
longDesc = """
If a birad, the reacting site *3 must be a triplet instead of singlet for this reaction family.
"""

template(reactants=["Root"], products=["YJ"], ownReverse=False)

reverse = "Li_NO_Ring_Opening_reverse"
reversible = True

reverseMap = {'*2': '*3', '*3': '*2'}

reactantNum = 2

productNum = 1

autoGenerated = True

recipe(actions=[
    ['LOSE_RADICAL', '*3', 1],
    ['BREAK_BOND', '*1', 1, '*2'],
    ['FORM_BOND', '*1', 1, '*3'],
    ['GAIN_RADICAL', '*2', 1],
])

entry(
    index = 0,
    label = "Root",
    group = 
"""
1 *1 [O,N] u0     {2,S} {3,S}
2 *2 R     u[0,1] {1,S}
3    R     u0     {1,S}
4 *3 Li    u1     p0 c0
""",
    kinetics = None,
)

entry(
    index = 1,
    label = "Root_1NO->O",
    group = 
"""
1 *1 O  u0     {2,S} {3,S}
2 *2 C  u[0,1] {1,S}
3    C  u0     {1,S}
4 *3 Li u1     p0 c0
""",
    kinetics = None,
)

entry(
    index = 2,
    label = "Root_1NO->O_Ext-2R-R",
    group = 
"""
1 *1 O  u0     {2,S} {3,S}
2 *2 C  u[0,1] {1,S} {5,[S,D,T,B,Q]}
3    C  u0     {1,S}
4 *3 Li u1     p0 c0
5    C  ux     {2,[S,D,T,B,Q]}
""",
    kinetics = None,
)

entry(
    index = 3,
    label = "Root_1NO->O_Ext-2R-R_Ext-5R!H-R_Ext-6R!H-R",
    group = 
"""
1 *1 O   u0     r1 {2,S} {3,S}
2 *2 C   u[0,1] r1 {1,S} {5,[S,D,T,B,Q]}
3    C   u0     r1 {1,S}
4 *3 Li  u1     p0 c0
5    C   ux     r1 {2,[S,D,T,B,Q]} {6,S}
6    R!H u0     r1 {5,S} {7,[S,D,T,B,Q]}
7    R!H ux     {6,[S,D,T,B,Q]}
""",
    kinetics = None,
)

entry(
    index = 4,
    label = "Root_1NO->O_Ext-2R-R_Ext-5R!H-R_Ext-3R-R",
    group = 
"""
1 *1 O   u0 r1 {2,S} {3,S}
2 *2 C   u0 r1 {1,S} {5,S}
3    C   u0 r1 {1,S} {7,[S,D,T,B,Q]}
4 *3 Li  u1 p0 c0 r0
5    C   u0 r1 {2,S} {6,S}
6    R!H u0 r1 {5,S}
7    R!H ux {3,[S,D,T,B,Q]}
""",
    kinetics = None,
)

entry(
    index = 5,
    label = "Root_N-1NO->O",
    group = 
"""
1 *1 N  u0     r1 {2,S} {3,S}
2 *2 R  u[0,1] {1,S}
3    R  u0     {1,S}
4 *3 Li u1     p0 c0 r0
""",
    kinetics = None,
)

tree(
"""
L1: Root
    L2: Root_1NO->O
        L3: Root_1NO->O_Ext-2R-R
            L4: Root_1NO->O_Ext-2R-R_Ext-5R!H-R_Ext-6R!H-R
            L4: Root_1NO->O_Ext-2R-R_Ext-5R!H-R_Ext-3R-R
    L2: Root_N-1NO->O
"""
)

